Script iniciado em Qui 25 Abr 2019 05:01:49 -03
]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ script li2T3[8Pexitscript li2T3[K[K]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:128:16:1:l -cache:il2 none -cache:dl1 dl1:128:16:1:l -cache:dl2 n one -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:128:16:1:l -cache:il2 none -cache:dl1 dl1:128:16:1:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:10 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:128:16:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:128:16:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   29281673 # total number of hits
il1.misses                 12454192 # total number of misses
il1.replacements           12454064 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.2984 # miss rate (i.e., misses/ref)
il1.repl_rate                0.2984 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   18374727 # total number of hits
dl1.misses                  1561360 # total number of misses
dl1.replacements            1561232 # total number of replacements
dl1.writebacks               792565 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0783 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0783 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0398 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$       
config_example_assoc1_direct  li.ss
li2                           liT2
li2T3                         queen50.lsp
li2T4                         queen6.lsp
li2T4pt2                      sim-cache
li.lsp                        train.lsp
]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$       ./sim-cache -ca che:il1 il1:64:32:1:l -cache:il2 none -cache:dl1 dl1:64:32:1:l -cache:d l2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:64:32:1:l -cache:il2 none -cache:dl1 dl1:64:32:1:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:15 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:64:32:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:64:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   33714231 # total number of hits
il1.misses                  8021634 # total number of misses
il1.replacements            8021570 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.1922 # miss rate (i.e., misses/ref)
il1.repl_rate                0.1922 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   18611427 # total number of hits
dl1.misses                  1324660 # total number of misses
dl1.replacements            1324596 # total number of replacements
dl1.writebacks               606185 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0664 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0664 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0304 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:32:64:1:l -cache:il2 none -cache:dl1 dl1:32:64:1:l -cache:dl2 non e -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:32:64:1:l -cache:il2 none -cache:dl1 dl1:32:64:1:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:21 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:32:64:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:32:64:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  2 # total simulation time in seconds
sim_inst_rate          20867932.5000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   36661242 # total number of hits
il1.misses                  5074623 # total number of misses
il1.replacements            5074591 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.1216 # miss rate (i.e., misses/ref)
il1.repl_rate                0.1216 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   18634538 # total number of hits
dl1.misses                  1301549 # total number of misses
dl1.replacements            1301517 # total number of replacements
dl1.writebacks               533026 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0653 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0653 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0267 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:16:128:1:l -cache:il2 none -cache:dl1 dl1:16:128:1:l -cache:dl2 n one -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:16:128:1:l -cache:il2 none -cache:dl1 dl1:16:128:1:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:24 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:16:128:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:16:128:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   38054743 # total number of hits
il1.misses                  3681122 # total number of misses
il1.replacements            3681106 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0882 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0882 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   18449909 # total number of hits
dl1.misses                  1486178 # total number of misses
dl1.replacements            1486162 # total number of replacements
dl1.writebacks               612995 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0745 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0745 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0307 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:64:16:2:l -cache:il2 none -cache:dl1 dl1:64:16:2:l -cache:dl2 non e -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:64:16:2:l -cache:il2 none -cache:dl1 dl1:64:16:2:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:29 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:64:16:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:64:16:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   33070747 # total number of hits
il1.misses                  8665118 # total number of misses
il1.replacements            8664990 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.2076 # miss rate (i.e., misses/ref)
il1.repl_rate                0.2076 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   18911103 # total number of hits
dl1.misses                  1024984 # total number of misses
dl1.replacements            1024856 # total number of replacements
dl1.writebacks               544392 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0514 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0514 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0273 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:32:32:2:l -cache:il2 none -cache:dl1 dl1:32:32:2:l -cache:dl2 non e -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:32:32:2:l -cache:il2 none -cache:dl1 dl1:32:32:2:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:32 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:32:32:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:32:32:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   36125582 # total number of hits
il1.misses                  5610283 # total number of misses
il1.replacements            5610219 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.1344 # miss rate (i.e., misses/ref)
il1.repl_rate                0.1344 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   19116372 # total number of hits
dl1.misses                   819715 # total number of misses
dl1.replacements             819651 # total number of replacements
dl1.writebacks               372425 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0411 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0411 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0187 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:16:64:2:l -cache:il2 none -cache:dl1 dl1:16:64:2:l -cache:dl2 non e -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:16:64:2:l -cache:il2 none -cache:dl1 dl1:16:64:2:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:36 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:16:64:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:16:64:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   38333308 # total number of hits
il1.misses                  3402557 # total number of misses
il1.replacements            3402525 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0815 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0815 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   19173715 # total number of hits
dl1.misses                   762372 # total number of misses
dl1.replacements             762340 # total number of replacements
dl1.writebacks               298379 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0382 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0382 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0150 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ ./sim-cache -cache:il 1 il1:8:128:2:l -cache:il2 none -cache:dl1 dl1:8:128:2:l -cache:dl2 non e -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp
sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./sim-cache -cache:il1 il1:8:128:2:l -cache:il2 none -cache:dl1 dl1:8:128:2:l -cache:dl2 none -tlb:itlb none -tlb:dtlb none li.ss queen6.lsp 

sim: simulation started @ Thu Apr 25 05:02:40 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-cache:dl1       dl1:8:128:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:8:128:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "queen6.lsp"
((1 2) (2 4) (3 6) (4 1) (5 3) (6 5))
((1 3) (2 6) (3 2) (4 5) (5 1) (6 4))
((1 4) (2 1) (3 5) (4 2) (5 6) (6 3))
((1 5) (2 3) (3 1) (4 6) (5 4) (6 2))

sim: ** simulation statistics **
sim_num_insn               41735865 # total number of instructions executed
sim_num_refs               19908981 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          13911955.0000 # simulation speed (in insts/sec)
il1.accesses               41735865 # total number of accesses
il1.hits                   39475686 # total number of hits
il1.misses                  2260179 # total number of misses
il1.replacements            2260163 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0542 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0542 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               19936087 # total number of accesses
dl1.hits                   19074841 # total number of hits
dl1.misses                   861246 # total number of misses
dl1.replacements             861230 # total number of replacements
dl1.writebacks               321840 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0432 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0432 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0161 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 180640 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  20788 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   73 # total number of pages allocated
mem.page_mem                   292k # total size of memory pages allocated
mem.ptab_misses                  73 # total first level page table misses
mem.ptab_accesses         207943554 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

]0;joao@kingsize: ~/Documentos/AOC2/simplesim-3.0/li[01;32mjoao@kingsize[00m:[01;34m~/Documentos/AOC2/simplesim-3.0/li[00m$ exit
exit

Script concluído em Qui 25 Abr 2019 05:02:46 -03
